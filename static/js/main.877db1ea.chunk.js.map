{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","types/Status.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","selectedTodo","selectTodo","className","map","todo","id","completed","cn","title","type","onClick","TodoFilter","status","selectStatus","query","getQuery","resetQuery","value","onChange","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Status","TodoModal","useState","user","setUser","isLoaded","setIsLoaded","getUserFromServer","a","userId","useEffect","href","email","name","App","setTodos","setSelectedTodo","ALL","setStatus","setQuery","getTodosFromServer","event","target","filteredTodos","filter","lowerTitle","toLowerCase","lowerQuery","includes","ACTIVE","COMPLETED","getFilteredTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.877db1ea.chunk.js","sourcesContent":["import React from 'react';\nimport cn from 'classnames';\n\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todos: Todo[];\n  selectedTodo: Todo | null;\n  selectTodo: (todo: Todo) => void;\n}\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodo,\n  selectTodo,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => (\n        <tr\n          data-cy=\"todo\"\n          className=\"\"\n          key={todo.id}\n        >\n          <td className=\"is-vcentered\">{todo.id}</td>\n          <td className=\"is-vcentered\">\n            {todo.completed && (\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            )}\n          </td>\n          <td className=\"is-vcentered is-expanded\">\n            <p className={cn(\n              {\n                'has-text-success': todo.completed,\n                'has-text-danger': !todo.completed,\n              },\n            )}\n            >\n              {todo.title}\n            </p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n              onClick={() => selectTodo(todo)}\n            >\n              <span className=\"icon\">\n                <i className={cn('far', {\n                  'fa-eye-slash': todo === selectedTodo,\n                  'fa-eye': todo !== selectedTodo,\n                })}\n                />\n              </span>\n            </button>\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n","import { Status } from '../../types/Status';\n\ninterface Props {\n  status: Status;\n  selectStatus: (event: React.ChangeEvent<HTMLSelectElement>) => void;\n  query: string;\n  getQuery: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  resetQuery: () => void;\n}\n\nexport const TodoFilter: React.FC<Props> = ({\n  status,\n  selectStatus,\n  query,\n  getQuery,\n  resetQuery,\n}) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          value={status}\n          onChange={selectStatus}\n        >\n          <option value=\"all\">\n            All\n          </option>\n          <option value=\"active\">\n            Active\n          </option>\n          <option value=\"completed\">\n            Completed\n          </option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={query}\n        onChange={getQuery}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n        {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n        {query && (\n          <button\n            aria-label=\"label\"\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={resetQuery}\n          />\n        )}\n      </span>\n    </p>\n  </form>\n);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","export enum Status {\n  ALL = 'all',\n  ACTIVE = 'active',\n  COMPLETED = 'completed',\n}\n","import React, { useEffect, useState } from 'react';\nimport cn from 'classnames';\n\nimport { Loader } from '../Loader';\nimport { getUser } from '../../api';\n\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\n\ninterface Props {\n  selectedTodo: Todo;\n  selectTodo: (todo: Todo | null) => void;\n}\n\nexport const TodoModal: React.FC<Props> = ({\n  selectedTodo,\n  selectTodo,\n}) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n\n  const getUserFromServer = async () => {\n    setUser(await getUser(selectedTodo?.userId));\n    setIsLoaded(true);\n  };\n\n  useEffect(() => {\n    getUserFromServer();\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!isLoaded ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedTodo?.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => selectTodo(null)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {/* <strong className=\"has-text-success\">Done</strong> */}\n              <strong className={cn(\n                {\n                  'has-text-success': selectedTodo?.completed,\n                  'has-text-danger': !selectedTodo?.completed,\n                },\n              )}\n              >\n                {selectedTodo?.completed\n                  ? 'Done'\n                  : 'Planned'}\n              </strong>\n\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\n\nimport { getTodos } from './api';\n\nimport { Todo } from './types/Todo';\nimport { Status } from './types/Status';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [status, setStatus] = useState<Status>(Status.ALL);\n  const [query, setQuery] = useState('');\n\n  const getTodosFromServer = async () => {\n    setTodos(await getTodos());\n    setIsLoaded(true);\n  };\n\n  const selectTodo = (todo: Todo | null) => {\n    setSelectedTodo(todo);\n  };\n\n  const selectStatus = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setStatus(event.target.value as Status);\n  };\n\n  const getQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n  };\n\n  const resetQuery = () => {\n    setQuery('');\n  };\n\n  useEffect(() => {\n    getTodosFromServer();\n  }, []);\n\n  const getFilteredTodos = () => {\n    const filteredTodos = todos.filter(todo => {\n      const lowerTitle = todo.title.toLowerCase();\n      const lowerQuery = query.toLowerCase();\n\n      return lowerTitle.includes(lowerQuery);\n    });\n\n    switch (status) {\n      case Status.ALL:\n        return filteredTodos.filter(todo => todo);\n\n      case Status.ACTIVE:\n        return filteredTodos.filter(todo => !todo.completed);\n\n      case Status.COMPLETED:\n        return filteredTodos.filter(todo => todo.completed);\n\n      default:\n        return filteredTodos.filter(todo => todo);\n    }\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                status={status}\n                selectStatus={selectStatus}\n                query={query}\n                getQuery={getQuery}\n                resetQuery={resetQuery}\n              />\n            </div>\n\n            <div className=\"block\">\n              {!isLoaded\n                ? <Loader />\n                : (\n                  <TodoList\n                    todos={getFilteredTodos()}\n                    selectTodo={selectTodo}\n                    selectedTodo={selectedTodo}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo\n        && (\n          <TodoModal\n            selectedTodo={selectedTodo}\n            selectTodo={selectTodo}\n          />\n        )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}